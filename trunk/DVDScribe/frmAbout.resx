<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAbrgAA
        G64BjF1z+AAAIN5JREFUeF7tnQeYVFXShlGEGUBgBtBVcRWzoq4oKgxJFFlhEUEUFRVMZBaRIEoUVHKQ
        nJNIlCQoOYNEyRkECYoIsiZAxHT+ek/fag7XnukwM+L+OzxPPT3Tc/v2ufXV91WdOudeLjDGZMr4dx49
        AAAZdv58kOH88xyAGQBkAHD+6P9XkN4MBmQwIIMBGSw4jyzIcP55dL6dg/0VEtH/8hgyAMhgQPom4Xbt
        2uUQu0GstFg1sUpihcX+JnbB+Wbf/xsGiDMTxZ4RGyE2X2yH2HdiJgU7I3/bL7ZcbJzYi2K5/0xQ/qsB
        EGddL9ZYbLHYL6Ec3blzZzNgwAAzZswYM3XqVDNu3DgzcOBAw/vJAPOTvD9FrIpYXHqD8V8HgDilgFgn
        L8KDTuzSpYuZNGmSWbVqldm6davZu3ev+eKLL8xXX31ljh49au3YsWPWvv76a2u8d/DgQbN7926zdu1a
        M3r0aNO+fXsXGBg0XOym9AIiRQDaZcp0Ye2i8TXrFs3aqlZStmLpNYhIzitOuFpsiNjPGrm9e/c2H330
        kdm8ebM5dOiQOXz4sPnyyy+DduTIEfszQHz++efWOAZQAOD48ePmm2++sfbtt9+a7777zv4NEGGJwxBY
        0UzswkjGGs0xKQJQJylumpjx7EytonHlozl5WhwrF/13sYHqeCJ9zpw5ZseOHdbpOFUdTNTz/rZt28yW
        LVssMLzCiO3bt9u/7dq1y+zZs8cyZP/+/UHgAAMAvv/+e/PDDz9Y47wffPCBC8TKtGZDsgBU/0emHOL4
        X+oVizOj6t4eAKFY3Ne1S2a/PC0cG+4ccqH5xfr7Hf/pp59a2cBw4M6dO82mTZushHzyySdm/fr1ZsOG
        DWbjxo32fT8AyA3n2Ldvn/nss8/MgQMHgiDCGJgBECdOnDAnT560xvE9evRQIGBD07RiQ7IAPF86U4I4
        /UxdAWBvy3ymU4XsCsI8WT9K1/JNLq6O2GkkgGQ5c+ZMG7U4C6cTzTh85cqVVi5Wr14dBGDdunUWBAUA
        FigDNPoVAM4HkMoiANCcASNgAwCcOnXKypSPDTNkfBeFC6Rwf09RgmoXi5tO5E97PqfZ+VqieaVUvAWh
        btG4xuFOHMvf5YLyik3D8R06dDAffvihlQwiFUNacPry5cvNxx9/bFasWBEEYM2aNSFZAAB8zpUfN/qR
        MaSGXKEAkKgB4D//+Y9lAwBggAHjOnXqpGwYEct1up8JkwOyVsPhb5XLbo62z2vm1c6tLPipToksd6T2
        y93Pi9PLiB3G+f369bMRjKMwZASnL1myxCxdutQsW7bM/g4AybEAGXKjH8e58gOTXPlRAKiMNEEDgCZn
        JOnHH3+0RjC8/fbbCsLbqfFDigB4eeAUIGxrnmi+aJvX9K+SQ5Py9sZJmbKl5sv5rDg8i1hXsd8pASdP
        nmyjniRJ5OL0hQsXmkWLFpnFixfb3xWA5FiABKn++6Of86r2axKnMnKj362QAAApUjk6ffq0+emnn2xe
        ePPNNxWEerH6Iew8oE5S/EQAGPdsTnO0XV6z5/U85vUHsikI/WL9Ys/5BcTx64j6rl27WllB6zEkZd68
        eWb+/PlmwYIFQRBSYgGfIQcQ/QoA+SJU9KP9fvnRuYLKj0a/VkawACkCAAygvVL1N3mtHIsvwgJQOylr
        ZQBoUzabOdA6jzksLFj+7wRDdcT7kicqxPLFMuDrxA5yASNHjrSJVctIop1Sc+7cuUEQwrEA52sVhHyF
        0n43+gEA7Q8V/UiPzg1c52tlBAvOnDljeGWsHgjH5DVntL4IC0DD8pnixNHf4+w1jRLMEWHBgVZ5zOin
        L1YWHK1ZJMffovliGeiNYl8w8GnTplnHo/VELVE/a9YsM3v2bAuCnwUqQ5oLYA2VEFWRRn847Xcrn3Da
        rwBoSQoDyAMw4Oeff7aJeciQIQpCu2j8wLFhAeCguklZRwHAiCcvNp+J8798I6/5tEUe86YkZ1sVJcXN
        ivSLxem3iH2J86dPn271GOcTwcgNUY/zFYCUWIDzScJahrrSE6v2Jxf9Wo5qIib6AQAjmXssOCGvl0Tq
        i4gBECeXw9Gvl8lmtksyBoCDIkdrX0kwL5cMlKZ1isY1DPfFMrjbxKCqLTG1rseBSAxaT8QT+SmxQBOx
        lqFu9MMirftT0n5tW2jd70+8lJ/MhlV2NPJxvCZiWPDLL79YOaKP5IHQK5wfIi5D9cB2pTNdxCwYRy+s
        m9vsa5nHfCVStFdYMO2FXCpFp2sVz3prcl8ugyskdpxKh4kVMgAAOA+HoqWAkBILAAgJQn40+v3aT8nq
        Rj/Vir/yCaX9mnjRfrcloQAQ+a7jcTrG+3yG7/EaebS4r44UhIgkiJOJ8wcCQP/HLjZbXw2UpIfa5DE7
        hBE9K2lpGr+matVMmf1f7iXcbxgg0sLMEwDQbOp5HIpjU2IBwACSRr8rPZxHE68b/drzQeK076MNObSf
        6NfuqEpPKOe70U/Uq/P5DEziFZswYYKyYECaA1ArKf4+AGhWOt5KDzmAshQ2fCK/N7kvIEW1k+Je9U2w
        4gSADdAT5xN9lH84DCcSydT1KbEAWQIcQOJYlR6NftV+nE/0Jyc92nJQ57uTLrcjmpz0qPOJesDjWjDO
        AwAA7cnQgTQHwLamk+IO4+TpL+YyW5olWgZ8LrZL2hS0K7yu6el6xeOC/XMZEJ1Mq5E6YHQa51G94Mzk
        WEACxjT6Xekhb2jZGemky205pFTzh9J9dT5zA6Jer0XlDACQsW7duikI10cCQsQSxMkEgJ44uVvFHLYk
        3S2TsmPSoqAyApBuFbUqyroCwMTxrMGanj17Wgkg8ujJ4DgAwInJsUDlSCdhMETbD1r1aNPNrfkD7YY9
        9vsCzbYDwQmXv+ZPTvfdikd1n1dmy24L3AVBkziLQh4L6qQ5AHWTstwLAP8uEW8W1Uswm5om2mqIyRlg
        rGqYEGzYNSibv6MM5ORbb71lezlQlpITuUCzSb6hWICjtdbXn93EC2vcGS/Op3UB/Q8dYnLF+gALLzTY
        aDGg9UesTGjFE073/ZrPXECLBncG7QLA+QGU4PAAmJTmAHgs2AwIQ5+42Kx6OUHkJ1AR7RcWkJwn1QhI
        Ud0SOX5r07yRTZwMjsECBNpP5IZiAfmAKHcNzcf8VQ/n2b17l0T5fi/KaSvT2QzlfJItTTaWI+l0fm01
        O1TF4y83AU27p8qqUCyAHQAAQB4Ax+U17ApaVBIUmJTF/RsHt5Q5waJ6uc3GJonW+cwN6BNtkN87e2sH
        zR+73UYdRmIEAPTazwKihsjGkCRMO536M7+r9OzYsV3YtC8Vzg8sRWqjjaTrlx3ew+FaxmolpWsI2kdS
        FiBvAID16tVLQbgrHAuiBoCFGgHhR0CYVCOXWSGyQykKAPSKtgsLljXIbRp5E7QPR3a1dTi9HqoUJMNl
        ga5kqSRpbsDZ/Ky/8wpw6DvO37//s7CRj/QQ+Rr9gcjH+UQ/vf5Ap1ObbFrrI1HkEswtZZHQlFig6wh0
        dD0WPJvmAARkKOtoACDSF8jEbH3jRFuOHvFaFLCC7inHNLw/0axZvtACoGu1sAAQcChypEZuwJAnNX0P
        9uzbRys54Hy/9Liaj+4fPcpuiLPS43f+t98y4QKAwIILzocFOJhCAca6K2jarzqb3M92U91yFAYwy480
        EUfNAACoVzy+pHWuJOMZL+U2H0t3dJtEPslYJ2drpUrqUD5QFb39YkkLgLJAF8wBQsEAEAUFYFzDITg+
        Oee7uh9IuJE5XwE4ceIHKx26oK8tbACIhgWaiJnveAA0TRcGeDPjnTh3gMyM59fJLZOxRNuaYHK2V9hA
        hbRI2KG9oilDuwR3JsAEDEkCDNeQKNdwAhGvUR8q8jXizybYgMwQ5Rg/q/Ro5KvzYQCfV3byqjsoomWB
        bnehhPYAaJt+ABSNawIALSQZz5CJ2bIGCWarzAWYmGGsITNDpoPKcU3K5TdbN2+wtObCiDZlhQLivgIO
        x6rDqefVKDepeCgzVee1wtHfA46mocY2k+9twnVlB8cDDOeEWWi97qBQEBSASFmgADBh9ADomm4A1C6c
        M5849gzOHV0tp5kr68XIDpWQnZwJC5icrZQkrStowzs0CCY3nKtgKCD6CjiUmDjab1pqan2Pw5GuWbNm
        mmHDhhn2DTH3GDFihC1nyQ1IzMmTJywQOB7jc+QUN6/oPqJYWaDbWqjYPAD6pxsAVoaKxU8AALT+A+mK
        LqmfYDZ7kzOadcwR1jVOMJOfCyTkBqVymfWrltrSDtPlR604zmrubhvhflOtDzj/K1sRDRo0yN049aNc
        +AqxbWK/4wQagBx36tRJSbSnbOIF1L172Rt0FgBYsG1bQBK1pxRJLtCJGX0mBYCKzQPg3fQFICm+jCbj
        8dVzmdm1cpvV3uSMXGAnZ8ICJmyakHs2eiS424HKAlNA9NWd0arTtcohcjEi/o033tALfU8u+A6x4D4d
        +ZktLmwntEDgYGp7zgMgLgDKgp07dwR30/lZoDKU0rxAAWA+4wEQdttKTFWQosoGrbrFsh8EhB6P5DBT
        n89lFkuLgjKUOYFOzihTZ4tE1S8eWEdeOut9W+5huudHt6DwO9quDudntUBZecwuY3oX+JW8prgYLn+v
        ybFs8NJkjfPVXBbAQHc3XaS5QFmgADhVUIt0ZQAnb1w1yW7eYtPW2Gdymlk1c5uVEvEkYeYFAEGJCjP6
        PBpYN2j7VCGzXxyt/RVdGQMQfz2P0wKOC7QSaEt4zmdZ88pwF8jf5bjtfAaJ4Tx8XygWkHcAILlc4GeB
        OzHjWhQAtsB7Y6wSbnypYgAnf6Nt6631789nHQsLpggLFkqLgpYEididnC0RdjT2dtfNGNXDdhZdQ25U
        YtxXIp+JFBHpXRj7M4uEuzj9uxzbmc+xkxoGMXFSAFwpwsG6sBNLLtAFHjaWeeO8LdwYUwWAfElBvqht
        /aoWAFgwRljwkbCAFgVticPe+jFrybSwRz2lZekVZt+enef01d1JlE6meKWGB4C+ffvohT0f7sJ8i0KV
        GefEiRMti0iYoQAgB7h7SnV5050XpMQCAIAFVGHyfewVig83ztQC0J4LWzB/rmlW4e9BFkx6LpeZL5Ow
        daL9TMp0/ZjJGbPmVo/fbF57rozp07WNGTp8sBk8dKBdK9C+jfuK46nfiVQvqnaFuyj/3+Vz1fnsjBkz
        7LZDqisA8IOwffu24M5qd2u7rjGnNC9A1gCAosIb5/5IxplaAHbxZXQCZ4/ubgFoLEuTo5/OaVsUbOA6
        u36c18xtVcR0advQdO7a4Rz7aOYM2z7QyZT7qk2zKVOm6IVFvTFYxtiIcc6fP88yiSprz57Awo2bjHG6
        f2d1pCzQHODslpubrgDIBXHnoenTp4/dpPTDd9+YpuWusCB0l1wwUTql86RFwfrx8raFTe+OzYJO7/FO
        VzPy3RGmS7eO9r1Zc2YG+/Q4yDXqdhjh7Thgy3piJBfmk6DejJXWNnLG7FcBcEHQ5qDeXxANCwAAFrOC
        5zGgdyTjjJkB8iWV+CI2V+k2vRnDOwRZMEpmx1NrXWqGtn066Ph3evcw4yeMs2u89EvenzTR/q17zy6W
        ATjHb8xeiVjvojZEclE+58fLZ+12GKSH8+N0AHBZQAVEB1Z310WbC3S9efDgwTrWhyIZa2oAaI5T6Nuz
        O4w102+OHzWNH7rMgtCtekHTtUNL6+BuPTqbDz+aIRG4wjoeo+SkDTx48AB7zOo1q4J9eu3X80obgVrd
        A2BBJBflA6AGnx0/frxdBaOkxdmYywKkRjd4uXfZRMIC5jAAQIL2mMpqWEQ3b6QGgGFcGDNDBQCHfjC4
        vXml8q2mU+f21rH9BvSxIDFIqK37f6ih6b9PnjLJHvfe2HfP6WBqJ5MeDtWJB8DEaACQz2QWs1tiOAeA
        MiPetYt7BQIAKAg4XReHomUBwQQAbJ/xxjkk0nGmBgBubrZ1NdvzyAMsaqxft1qc/6Z1as9e3cz7779v
        13MBgCYb03RlAHOAuXPn2FyAMQlD89UCiyUn3f02qyK9MG8C1o0x0i+i309yx/kKgIIAOLoCFwsL9EYP
        587KByMdZ2oAsHs8cfqvv/5qAcBx4yeMMV28KgenTpg4we7zZIZJ1KOt7HYgb/CP9wcNCcjQ0mWLg6tU
        2rUEAFrJ3s0Q9HXyR3JxctzjjI/uKHU/a8C0tnG2CwIMQPt1t0W0LKChSCAxV/DkB7/8YXdgcmOOCQD5
        ggQujk1Iv/32mwUAhwICueD4sSMiPb2tU0e/N8pOgGghUCNTSxNt/Mw/1mQnTw7I0JBhg4LtYu3jAwB5
        wClD3wwHgIytqtgJQMNBSA/sYjHfDwCdT/c2J73XTG/2C1cRcR1UQASZJz8Dw43P/XusABThy9jtpgCQ
        B1wQmNTg1K7dO5mxY8fYDblcDHpJ1CNLfIZ/GzdukETdxR4PS9T5OJ6qhTIU4Jy72F8LdZEypjxiPPPB
        zkbRdZzPBCkwmw0A4IKwenVgd56C4N7sF0kuYLwA0LdvXwXg/j8DgApcJKv/v//+u2WA7pVXEGDD9A+n
        Waf26dfLViFIDxFJ15ELVRawcjVi5DB77Nx5s2zEAwJdUJKmdkEByrk5jgbbILHaYmj9UgGI9QC7GAPQ
        VD3oPo4nIHh1WbBhw/rgHZexsICqh+9xFmAOyPeH3QuUFgwozYXS9QMAWEAixpQJAIG89JcqCMcOHTbY
        7hYgqkhalHcMXFmwQkpUjusrYFEBUbOj2YHtJweDu5hxJPtufM90sDmiV693rLzRbtCSk2inC8rnFATe
        27Jlc3Cntd7sFy0LdD3Dif4a0UQ/x8YqQXdrpAGAssAFQYFgqq9VzqhRI20ZqitfJDyqI/6RaHvJRA0Q
        1sicgNmqAqCbsHT/JZUXk7NNmzbK1vYldgWLRKvPfkC2+MzWraxucb8Au6YDICgbyEnuLa+6805v/A6X
        C5BEAHAW4LdEG/2pAYDbjOwDLRQAzQXIkTJBZWnO3FnWse/06m7vNsfxRDWTH6JOWTBnzmx73IT3xwUB
        8IOgM2Z3sqYP3AAA+lJEOI4nyv0AAATOD3WvWaS5gHGrlDqPMIjpZsVYGcADNKwUhAJAQVAgKFUHe6Vm
        v/59bdQwJ+AiKAH5mZyxdNnSYGuC2a+fBbp6BasAJrBcedj+TDmp0U2k42hlgILAK1Hv3nEZCwt07Kwv
        eJXP0milR4+PFQCqDbvM5wLgssAFASAOiaZTERHh48aNtUmY+hn5gP7aoujbv7dp1aaFPGDpPess5g0u
        CwABALSdjOOZUFHbE/kKggKgLNi8eZONer3v2L3x273jMhwLqOCQUMbtPPSp6J8NQFYAIPHhdE3E+uoH
        AjCwJUsXByJcSk5mwJSGtDJIzNzqWadObfPYY4+ZqlWrmieeeMI8/vjjplKlSqZBgwb2XmJlgAtCSgAo
        CGvXBm761jsu3Ru/deu7e/d9ShURYwYA5jZe9E+N1fkx5wBvmn+UAdDPURa4AACCHwi0fvjIoRaEgYP6
        29knc4P69eub8uXLm8qVK5snn3zSPPvss6ZGjRrm6aeftiBUrFjR/POf/zTNmze3UhMpC5Cc5cuXBe+4
        dG95BYRoWUDlRvLlc97MnIdH3Xy+ABgPAESDC4BfkhQIfT0g1Q3dUUAYM/Y9U/nRyqZMmTKmQoUKpkqV
        KtbpL7zwgmnUqJGVJd3iUa5cOVO6dGnzyiuvBJmgUuRnATmAchQnJ3ffcbQsYFJH9MNWR3oapMb5qWWA
        3e7BFpFQAPhZgQSxL4f6fOGiBRaAR6tUNsWLF/8DAC+++KJtPTDRIeJYEgQgAEhKShJQVp7DAu1qEvFU
        WJpo9ZZX977jWFjAOXUfKw8A9KRnQmqdn1oACjAQml3hAEB62IPPjBcA2BoycGA/U7hwYVOsWDFz//33
        /0GCmDnDLioOEt+jjz5q7rvvPlOkSBHTunUrC4zeb0BUwhT/HZd643dqWUAhQOnp3IbKUmzUz4UIBVhM
        VZCeSAaxDxCYRCUnQ5SXzIip1fVJhSzdDR061BQqVMg6FMeWLVvWPPzww1aGSMC1atWy20jQ29atW5sH
        H3zQlCxZ0txzzz32eMpXvalDb/YLdcdlalkAuGg/SdybfdPuCLvdJFJ2pBaAwQCAM/zarw+yIOr9zmfW
        2rZtW3P77bebu+++28oQLHjooYes1FD5YI888oj517/+ZROwys9dd91lbr31Vit9eksTjsdgQHIsQIZC
        PYMipVwAwLCPqsjR/ai2xIQDIrUAPAYAPD7SnQHTknYlh9YBHUkmTdT+NLBoZd9yyy2WBffee68pUaKE
        BQEmAARJl1ciH+NvRP8dd9xhbr75ZgugOl1v6tMb+sgB7t33sbAAVlGhAWj37t1V94eHc2i0f08tAJll
        g+xOnAFNkRuWJZEcZInIx/lsVnKdT+3P4vUNN9xgo/nOO++0IMCEUqVK2WjH4bwiOy+//LJ5/fXXTdGi
        RU3BggXN9ddfb0tW1+F0Wv1GjY+EuQ8BiYQFMAvp4fzOjdczJdjS/Em6qQJANudmfu21155s06aNTcb6
        nAWcT1/G73x65zif5MpuimuuucbceOONFgSYgByRE6h0MBzO7y+99JJp0qSJdTqgFShQwFx77bXBZ0fg
        aDWt7XlVcx8CEq4iglX6ABHH+dPF+Vmjje5Ijo8JAHH8hWLxYjnF8rRo0WJDq1at7AUT9TifSseNfJxP
        91ArG6oKpAUQcCqRTU4ACBiB1vOK5MCOmjVrmurVq9voz58/v7nkkkvsIohGubYy9FWfvqK/R8IC5IYW
        CZ/hEWrIq7B7qshhtvR6VGdUADAIsSxiDCi3WD6xK5555plqLVu2tFUCTlfN1wdz0P9X5+uNepR2bGLF
        mVdffbW57rrrLBvIC4Chht7zPoxgVkzpivMTEhJskvY7HkdrYnUfd8B7yeUC/qZP3uJn2IzzpfqactVV
        VyV615uVwIskqqM5JmIAvKhnEOc4X34vIHaDSMQKdJqnlJNwKTWpdnC+So9OqnQLIIlOwDOXX365ufLK
        Ky0QMAIwMGSG33mfvyNJJOt8+fKZHDlymNy5c9ulTtfp+nNyIOgDoTQXAJKuBdAq79ixo3W+sHqSgHwZ
        DBfLJZZDLE4sov0+kYIQEQA+5yM7NvLFrha7Xqyg1OaPCwCn6ddQImrSBQAWXWg9M6nSu+V18kSio/a/
        9NJLzWWXXWauuOIKywocziu/8z5RnzdvXitXgJIlSxb+E0wjOegcAPwP+dDf9VVZwOQMmdIntbCMqats
        cg1j4uPjCSyu8VKxvB7jFYSIdz2EAyIsAI7soPkXiyWI/U3s72LXiN0sdrtYYZlINZbB//rqq6/aHgwl
        p58BzF6RHwCAASQ9HNGsWTPrdJxMhKvxe2JiosmVK5eNenGMPSZbtmwWAHJGcrqvfX/3VZmh3U92M2iZ
        KRXdD9IGaQKjvWvjGi8Xu8RhQnb5Oc3kKBIASLhQjy+GilASal7lRf8t8voPsXvEikk7uSMsAASii5Uv
        TcD0dsgB+rgC3Y+DBFC3UxkxCybyc+bMaQ2nZ8+e3TqeqL/gggus4/VnfmdW7a+CNDm7FRLfof1+xsaa
        tj58VSRnoyT7h+Tct4rdJHadGAzP712vsoAgJBjTRIoiASCzBwD0I/EyEAWAQQLAHQqAvJYWXR8OAOQE
        ZpHKAk3ENNcUBGWC9nL0EcXsugYMJChz5sxBx+N8vz3wwAMWQH2oq/6s8wLOqY+2hHXIUP/+/XVy9Wu9
        evUGx8XFEUBcBwDAaqS1gNiV3vUiuwliSLAFQCzVDzGPBgCXAegiA7tWjGiBAYXFksRKij0gVP4AEJAW
        ErM+bUTzgfvwDmac2tvRvo771BTu/6UEvemmm0zWrFn/AMCFF14oe4/G/uFRNzCL8+mzKGADbNGolyrn
        Sykxa8t47/XGrwCEYoAC8KczwC09QZ8oYDB+GSok790tVkys1EUXXVT2qaeeGiog/AwQXLQuxtOKAAi3
        3ew+S8h9aIf79BR9xJlKB4s2lKckaHpI/gf56fMm0HuSrDpeavsf69at+55UX0hOUW/cd8oruQxGaw5A
        ZjURazVEICLJaZKIwzLA9qzly7wvdVlAYiJBaSWkUgQIXJRlgiTJmtJK2KV5gTYzztc7JLVEBQyqJO27
        uw/x0BsnFBj3iSq6lxMn6x2OyBs/Iz2jRo0KOl6S7Glx/DgpayvK2IqHcH5Bee9GMZit+k/B8Qf9l/dS
        LT9RrQeEAYFIIR+gnbeJ3SUGrWHDfSIbZWWZcYSA8DNloyQ8KwU4SB+ApHkCcGhX6N3zzB30UTfusyT0
        ORPu33A8uk/f3tkuwg3dOH6CtDAqyXhKiCGVruww5lCRn67OjwoAjwlURDoZc+WIgVItKBu0NIXWJDeb
        G6TKeKFhw4arBYBfSdAYjTxyBDkAaaJ01f+exL2JmwSujzZwH3FAScvkikV7/tMH5+55ZrLHJMGOl0md
        G/GMh3yF3qvjiXqtesht/tIzXSZhUQPggUBOoAJwS1Om65oXAAJGaILWMhUwiLoi0s+pKEm1d9OmTXfQ
        wnCNyRBPWYQhyBWLMtTu1OvsRX333XdtBUOjDGcDoOt0AXd3nTp1Rkg39QWPgUW8IMDphcQoGLTSQetV
        blzHu5LDzJ/2S5pIjn9iFlEOCLmUFugLuUAoIxg8VRJRxEUBBhM2ogwwiDqcACB3S7ezijhsqEjTPmno
        nWH1C6PD6jecrQ73nP67HPOtSNsqqbq6SuPuYcfZnN91ON9NdeM6nYkWSRYGE0CaaLXSwfFp3v9x/Rkz
        AOecJNAdZbDUx9CVCVuCGGCQrKmYuFAuGJkCECiPMxQYEuBt0pouJaXhE9WqVXtZOqAdRLKGSp9pqiTy
        UQJUV2HOq9KEe076QuWlF0TCB0wMYIlszuM6m3qe7ysgRjDAUILDdTrzG5xOtNt+j1i6RHyaMSC5HocM
        3AWDqokL8wPCxSsoOARgcA5OwlkKECDhwOSMv2PIiDoZgDkX7FNn810EgkY5DoexBAtOJ69R6f0pTk9z
        BqQABjIFICpVXKwLCo4gf0B92IKDcBQAKUg4j4j1G+9jeiyyp07mXJwzQQzwXWfDUth6Xhye7gwI1/1z
        EjkOABiiD9rjGAWIyIQ5GM5LzvQYjgdYPo9xLs7L+fkeguBPj+6IfBHJQefzGByXnJ3PcaXVd6dJEk6r
        wfwvnicDgIz/0jx9/0vzvzqrMhhwnhnwf7LRSA+/b7BCAAAAAElFTkSuQmCC
</value>
  </data>
</root>